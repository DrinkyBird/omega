/* This reads the changelog.txt and compiles an ACS command to show recent
 * changes.
 */

#include <cstdio>
#include <cstring>
#include <ctime>
#include <string>

using std::string;
using std::size_t;

void replaceInString( string& line, const char* a, const char* b ) {
	size_t pos = 0;
	while(( pos = line.find( a, pos, 1 )) != std::string::npos )
		line.replace( pos, strlen( a ), b );
}

int main( int argc, char* argv[] ) {
	if( argc != 3 ) {
		fprintf( stderr, "usage: %s <changelog> <acsfile>\n", argv[0] );
		return 1;
	}
	
	FILE* fp = fopen( argv[1], "r" ),
		*fp2 = fopen( argv[2], "w" );
	
	if( !fp || !fp2 )
		return 1;
	
	const time_t seconds = time( NULL );
	const tm* timeinfo = localtime( &seconds );
	
	fprintf( fp2, "// Autogenerated by %s on %s\n"
		"script SC_CL_Changelog( void ) NET CLIENTSIDE {\n"
		"\tLog( s:\"Recent changes:\\n\"", argv[0], asctime( timeinfo ));
	
	char buf[1024];
	enum { InitialSkip, Reading } status = InitialSkip;
	
	while( fgets( &buf[0], sizeof buf, fp )) {
		string line = buf;
		const bool isChangelogEntry = ( strncmp( &line[0], "- ", 2 ) == 0 );
		
		/* Filter out stuff we don't want */
		if( status == InitialSkip && !isChangelogEntry )
			continue;
		else if( status == Reading && !isChangelogEntry && line[0] != '\t' )
			break;
		
		status = Reading;
		
		/* Replace tabs with spaces, remove trailing newline, also encode quotes. */
		replaceInString( line, "\t", "    " );
		replaceInString( line, "\n", "" );
		replaceInString( line, "\"", "\\\"" );
		
		fprintf( fp2, ",\n\t\ts:\"%s\\n\"", line.c_str() );
	}
	
	fprintf( fp2, " );\n}" );
	fclose( fp );
	fclose( fp2 );
	
	printf( "%s: Recent changelog written to ACS.\n", argv[0] );
}