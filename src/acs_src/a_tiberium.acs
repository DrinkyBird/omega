// determine should we pick up Tiberium or leave it there
script 357( void )
{	SetResultValue( 0 );

	if( CheckInventory( "IsHarvester" ) && !CheckInventory( "TiberiumCrystal" ))
	{	SetResultValue( 1 );
		IntelMessage( "\cJTake it back to \cQRefinery!" );
	}
}

// Tiberium refining terminal
script 110( int Team )
{	if( Team != !PlayerTeam() || PlayerTeam() < 0 || PlayerTeam() > 1 )
	{	Error( "This is not your terminal!" );
		terminate;
	}

	if( !CheckRefinery( PlayerTeam() ))
		terminate;

	if( !CheckInventory( "IsHarvester" ) || !CheckInventory( "TiberiumCrystal" ))
	{	Error( "You need to be a \cfHarvester \crand have \cdTiberium!" );
		terminate;
	}

	TakeInventory( "TiberiumCrystal", 1 );

	if( EnhancedRefining[PlayerTeam()] )
		GiveCredits( -1, 50 );
	else
		GiveCredits( -1, 25 );

	AddExperience( 75 );

	// [Dusk] Determine the amount here instead of copying the message 4 times...
	int bonus;

	if( CheckInventory( "ClassID" ) == CLASS_ADVHARVESTER )
		bonus = GetCVar( cond( EnhancedRefining[Team], "aow_enharvestbonusadv", "aow_enharvestbonus" ));
	else
		bonus = GetCVar( cond( EnhancedRefining[Team], "aow_harvestbonusadv", "aow_harvestbonus" ));

	BigMessage( strparam( s: "You refined a \cDtiberium crystal!\c- Extra \cQ$\cD", d: bonus, s: "\c- for you" ));
	GiveCredits( -5, bonus );
	GivePoints( 1 );
	int amount = 75;

	switch( GetCVAR( "aow_economy_mode" ))
	{	case 1:
			amount = 75;

			if( EnhancedRefining[Team] )
				amount = 225;

			break;

		case 0:
			amount = 1500;

			if( EnhancedRefining[Team] )
				amount = 2000;

			amount /= GetTeamProperty( PlayerTeam(), TPROP_NumPlayers );
			break;
	}

	for( int i = 0; i < MAXPLAYERS; i++ )
	{	if( PlayerInGame( i ) && GetPlayerInfo( i, PLAYERINFO_TEAM ) == PlayerTeam() )
		{	GiveCredits( i, amount );
			SetActivator( TID_Player + i );
			IntelMessage( strparam( s: "Your teammate has \cDrefined Tiberium\n",
				s: "and has awarded your team with \cQ$\cD", d: amount ));

			LocalAmbientSound( "powerup/credsound", 255 );
		}
	}
}