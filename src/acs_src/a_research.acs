// All Out War 2 Research purchase scripts
// Credit to VoltlocK for originally creating the engine
// With modifications by Eruanna, Dusk and the Omega Team

// You may use portions of this script in your project as long as you give credit where credit is
// due. Please don't be lame and just copy-paste any of this and call it your own. Thanks!

//---------------------------RESEARCH ENHANCED REFINING
script 65( void )
{	int cost = 2000;

	if( MitigateDoublePress() ) terminate;

	if( EnhancedRefining[PlayerTeam()] )
	{	Error( "This has already been researched!" );
		terminate;
	}

	if( !CheckPlant( PlayerTeam() )) terminate;

	if( !CheckInventory( "PurchaseToken" ))
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );
HudMessage( s: "\cd----Enhanced Refining----
					\n\n\ciCost: \cf$2000
					\n\ciPurpose: \cdNew technology gets more purity
					\n\tout of refining Tiberium.
					\n\cd--- Increases Harvesting income by \cf$150";
					HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );
		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
Log( s: pname( -1 ), s: " researches Enhanced Refining for ", s: TeamNames[PlayerTeam()] );
	EnhancedRefining[PlayerTeam()] = True;
}

//---------------------------ADVANCED MECH RESEARCH
script 66( void )
{	int cost = 2000;

	if( MitigateDoublePress() ) terminate;

	if( !CheckFactory( PlayerTeam() ))
		terminate;

	// [SP] mechs not allowed!
	if( !GetCVAR( "aow_mechs" ))
	{	Error( "Mechs have been disabled for this map!" );
		terminate;
	}

	if( AdvancedMechResearch[PlayerTeam()] )
	{	Error( "This has already been researched!" );
		terminate;
	}

	if( !CheckPlant( PlayerTeam() )) terminate;

	if( CheckInventory( "PurchaseToken" ) == 0 )
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );
		HudMessage( s: "\cd----Advanced Mech Research----
					\n\n\ciCost: \cf$2000
					\n\ciPurpose: \cdNew Mech chassis and hardened metal plating.
					\n\cd--- Enables construction of larger Mechs.";
					HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );
		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost ))
		terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();

	BigMessage( "\ciResearch Complete!" );
	Log( s: pname( -1 ), s: " researches Advanced Mechs for ", s: TeamNames[PlayerTeam()] );
	AdvancedMechResearch[PlayerTeam()] = True;
}

// [Dusk] OBELISK RESTORATION
script 67( void )
{	int cost = 8000;
	int team = PlayerTeam();
	str name = cond( team == TEAM_BLUE, "Tesla Coil", "Obelisk" );

	if( MitigateDoublePress() )
		terminate;

	if( !CheckPlant( PlayerTeam() ))
		terminate;

	if( GotObelisk[team] )
	{	Error( strparam( s:"The ", s:name, s:" is already active!" ));
		terminate;
	}

	if( RestoringObelisk[team] )
	{	Error( strparam( s:"The ", s:name, s:" is already being restored!" ));
		terminate;
	}

	if( CheckInventory( "PurchaseToken" ) == 0 )
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );
		HudMessage(
			s: "\cd----", s:name, s:" Restoration----",
			s:"\n\n\ciCost: \cf$", d:cost,
			s:"\n\ciPurpose: \cdRestores the ", s:name, s:" if it is destroyed.\n",
			s:"\n\cd--- Restoration takes ", d:GetCVAR( "aow_obeliskrestoredelay" ), s:" seconds to complete.";
			HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost ))
		terminate;

	Log( s:pname( -1 ), s:" researches ", s:name, s:" Restoration." );
	ACS_ExecuteWithResult( SC_RestoreObelisk, team );
	AddExperience( 750 );
	GivePoints( POINTS_RESEARCH * 5 );
	SpendCredits( cost );
	DisplayTick();
	BigMessage( "\cIRestoration process started!" );
}


//---------------------------HEALTH REGEN CACHE
script 68( void )
{	int cost = 2250;

	if( MitigateDoublePress() ) terminate;

	if( ( PlayerTeam() == TEAM_RED && ThingCount( T_NONE, 902 )) ||
			( PlayerTeam() == TEAM_BLUE && ThingCount( T_NONE, 903 )) )
	{	Error( "This has already been built!" );
		terminate;
	}

	if( !CheckPlant( PlayerTeam() ))
		terminate;

	if( !CheckInventory( "PurchaseToken" ))
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );
		HudMessage( s: "\cd----Team Health Regeneration----
					\n\n\ciCost: \cf$2250
					\n\ciPurpose: \cdImplant advanced cell reproduction.
					\n\cd--- Gives entire team +1 health/s regeneration.
					\n\cd--- Builds a Regen. Health Cache behind the Research Centre.";
					HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );

		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost ))
		terminate;

	SpendCredits( cost );
	DisplayTick();
	BigMessage( "\ciConstruction Complete!" );

	ACS_ExecuteAlways( 344, 0, 6 );

	if( PlayerTeam() == TEAM_RED )
		SpawnSpot( "Utility_GlobalMedicCacheRed", 212 );
	else
		SpawnSpot( "Utility_GlobalMedicCacheBlue", 112 );
}

//---------------------------AMMO REGEN CACHE
script 69( void )
{	int cost = 2250;

	if( MitigateDoublePress() ) terminate;

	if( ( PlayerTeam() == TEAM_RED && ThingCount( T_NONE, 904 )) ||
			( PlayerTeam() == TEAM_BLUE && ThingCount( T_NONE, 905 )) )
	{	Error( "This has already been built!" );
		terminate;
	}

	if( !CheckPlant( PlayerTeam() ))
		terminate;

	if( !CheckInventory( "PurchaseToken" ))
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );
		HudMessage( s: "\cd----Team Ammo Regeneration----
					\n\n\ciCost: \cf$2250
					\n\ciPurpose: \cdIssue mini-ammo dispensers
					\n\cd--- Gives entire team slow Ammo regeneration. Mechs Included.
					\n\cd--- Builds a Regen. Ammo Cache behind the Research Centre.";
					HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );
		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 * 1 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost ))
		terminate;

	SpendCredits( cost );
	DisplayTick();
	SETFONT( "BigFont" );
	HudMessage( s: "\ciConstruction Complete!";
				HUDMSG_FADEOUT, 1800 + PlayerNumber(), CR_GREEN, 0.5, 0.45, 2.0, 1.0 );

	ACS_ExecuteAlways( 344, 0, 8 );

	if( PlayerTeam() == TEAM_RED )
		SpawnSpot( "Utility_GlobalAmmoCacheRed", 213 );
	else
		SpawnSpot( "Utility_GlobalAmmoCacheBlue", 113 );
}

//---------------------------+1 GERNADE
script 70( void )
{	int cost = 250;

	if( MitigateDoublePress() )
		terminate;

	if( !CheckPlant( PlayerTeam() ))
		terminate;

	if( GetAmmoCapacity( "FragGrenadeAmmo" ) >= 4 )
	{	Error( "You already have 4!" );
		terminate;
	}

	if( !CheckInventory( "PurchaseToken" ))
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );
		HudMessage( s: "\cd----+1 FRAG GRENADE----\n",
					s:"\n\ciCost: \cf$", d:cost, s:"\n",
					s:"\ciPurpose: \cdAdditional frag grenade.\n",
					s:"\cd--- Maximum of 4.\n";
					HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );
		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 * 1 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost ))
		terminate;

	SpendCredits( cost );
	GiveInventory( "Refunds", cost / 2 );
	DisplayTick();
	BigMessage( "\ci+1 frag grenade!" );
	SetAmmoCapacity( "FragGrenadeAmmo", GetAmmoCapacity( "FragGrenadeAmmo" ) + 1);
	SetInventory( "FragGrenadeAmmo", GetAmmoCapacity( "FragGrenadeAmmo" ));
	SetWeapon( "FragGrenade" );
	TakeInventory( "PurchaseToken", 1 );
	Log( s: pname( -1 ), s: " purchases +1 frag grenade" );
}

//---------------------------REPAIR GUN UPGRADE
script 71( void )
{	int cost = 200;

	if( MitigateDoublePress() )
		terminate;

	if( CheckInventory( "RepairGunUpgrade" ))
		terminate;

	if( !CheckInventory( "RepairGun" ))
	{	Error( "You must have a repair gun!" );
		terminate;
	}

	if( !CheckPlant( PlayerTeam() ))
		terminate;

	if( !CheckInventory( "PurchaseToken" ))
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );
HudMessage( s: "\cd----Repair Gun Upgrade----
					\n\n\ciCost: \cf$200
					\n\ciPurpose: \cdUpgrades your repair gun
					\n\cd--- Allows you to repair faster";
					HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );
		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost ))
		terminate;

	SpendCredits( 200 );
	GiveInventory( "Refunds", 175 );
	DisplayTick();
	BigMessage( "\ciUpgraded the Repair Gun!" );
	GiveInventory( "RepairGunUpgrade", 1 );
	SetWeapon( "RepairGun" );
Log( s: pname( -1 ), s: " purchases repair gun upgrade." );
}


//---------------------------ADVANCED TURRETS
script 72( void )
{	int cost = 2000;

	if( MitigateDoublePress() )
		terminate;

	if( AdvancedTurrets[!PlayerTeam()] )
	{	Error( "This has already been researched!" );
		terminate;
	}

	if( !CheckPlant( PlayerTeam() ))
		terminate;

	if( CheckInventory( "PurchaseToken" ) == 0 )
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );
HudMessage( s: "\cd----Advanced Turrets----
					\n\n\ciCost: \cf$2000
					\n\ciPurpose: \cdNew turret tech has come in!
					\n\cd--- Enables use of higher level turrets.";
					HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );
		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost )) terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();
	BigMessage( "\ciResearch Complete!" );
Log( s: pname( -1 ), s: " researches Advanced Turrets for ", s: TeamNames[PlayerTeam()] );
	AdvancedTurrets[!PlayerTeam()] = True;
}

//---------------------------MORE TURRETS
script 73( void )
{	int cost = 2000;

	if( MitigateDoublePress() ) terminate;

	if( MoreTurrets[PlayerTeam()] )
	{	Error( "This has already been researched!" );
		terminate;
	}

	if( !CheckPlant( PlayerTeam() )) terminate;

	if( !CheckInventory( "PurchaseToken" ))
	{	GiveInventory( "PurchaseToken", 1 );
		SetFont( "BIGFONT" );

HudMessage( s: "\cd----Increased Turret Support----
					\n\n\ciCost: \cf$2000
					\n\ciPurpose: \cdMore generators to power turrets.
					\n\cd--- Increases Turret cap by 10.";
					HUDMSG_FADEOUT, 2100 + PlayerNumber(), CR_Green, 0.25, 0.25, 3.0, 2.0 );
		ACS_ExecuteWithResult( 330, cost );
		Delay( 35 );
		TakeInventory( "PurchaseToken", 1 );
		terminate;
	}

	if( !CheckCredits( cost ))
		terminate;

	AddExperience( 150 );
	GivePoints( POINTS_RESEARCH );
	SpendCredits( cost );
	DisplayTick();
	BigMessage( "\ciResearch Complete!" );
Log( s: pname( -1 ), s: " researches More Turrets for ", s: TeamNames[PlayerTeam()] );
	MoreTurrets[PlayerTeam()] = True;
	MaxTurrets[!PlayerTeam()] += 5;
}