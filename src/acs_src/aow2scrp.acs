/****************************************************************************************************
 ** All Out War 2: The Second Coming ACS script                                                    **
 ** Credit to VoltlocK for originally creating the engine                                          **
 ** With modifications by Eruanna, Dusk and the Omega team                                         **
 **                                                                                                **
 ** You may use portions of this script in your project as long as you give credit where credit is **
 ** due. Please don't be lame and just copy-paste any of this and call it your own. Thanks!        **
 ****************************************************************************************************/

// Tag legend:
// [SP] == Eruanna
// [NG] == Tiger

#include "zcommon.acs"
#library "aow2scrp.acs"

#define MAX_NORMAL_WEAPONS 22

#define TEAM_NONE 255
#define MAXPLAYERS 64
#define TICRATE 35
#define MINUTETICS (60 * 35)

#define SELFHEALHEALTH 50

// [Dusk] Intel HudMessage coords
#define INTEL_XPOS 0.5
#define INTEL_YPOS 0.055
#define INTEL_YPOS2 0.0475

#define HID_ENTER         1000 // 1000 - 1001
#define HID_BIGMESSAGE    1080
#define HID_CLASSTEXT     1090 // 1090 - 1091

// [Dusk] Spacing between SMALLFONT rows, in HUDMessage units
#define SMALLSPACE 0.015

// [Dusk] Rank stuff
#define RANK_PRIVATE 0
#define RANK_CORPORAL 1
#define RANK_SERGEANT 2
#define RANK_MASTERSGT 3
#define RANK_OFFICER 4
#define RANK_LIEUTENANT 5
#define RANK_MAJOR 6
#define RANK_COMMANDO 7

// [Dusk] Experience numbers
#define MAX_XP 3250
#define XPREQ_CORPORAL      250
#define XPREQ_SERGEANT      500
#define XPREQ_MASTERSGT    1000
#define XPREQ_OFFICER      1500
#define XPREQ_LIEUTENANT   2000
#define XPREQ_MAJOR        2500
#define XPREQ_COMMANDO   MAX_XP

// class ids
#define CLASS_NONE 0
#define CLASS_GUNMAN 1
#define CLASS_ENGINEER 2
#define CLASS_MINIGUNNER 3
#define CLASS_TECHNICIAN 4
#define CLASS_FLAMER 5
#define CLASS_RIFLEMAN 6
#define CLASS_MACHINEGUNNER 7
#define CLASS_GRENADIER 8
#define CLASS_ROCKETEER 9
#define CLASS_STEALTH 10
#define CLASS_GAUSSGUNNER 11
#define CLASS_CHEMWARRIOR 12
#define CLASS_SHOCKTROOPER 13
#define CLASS_COMMANDO 14
#define CLASS_SHOTGUNNER 15
#define CLASS_SUICIDEBOMBER 16
#define CLASS_SNIPER 17
#define CLASS_UTILITYGUY 18
#define CLASS_DEMOEXPERT 19
#define CLASS_MEDIC 20
#define CLASS_LASERCHAINGUNNER 21
#define CLASS_JUMPJET 22
#define CLASS_TIBRIFLE 23
#define CLASS_DOUBLESHOTGUNNER 24
#define CLASS_PLASMAGUNNER 25
#define CLASS_ARTILLERY 26
#define CLASS_TIMECOP 27
#define CLASS_HARVESTER 28
#define CLASS_ADVHARVESTER 29
#define NUM_CLASSES 30

// mech ids
#define MECH_ORCA 0
#define MECH_RAVEN 1
#define MECH_WOLVERINE 2
#define MECH_MADCAT 3
#define MECH_TITAN 4
#define MECH_GUARDIAN 5

// event scripts
#define ACTION_DESTROY_BARRACKS 0
#define ACTION_DESTROY_REFINERY 1
#define ACTION_DESTROY_PLANT 2
#define ACTION_DESTROY_FACTORY 3
#define ACTION_DESTROY_OBELISK 4
#define ACTION_DESTROY_REPAIR 5
#define ACTION_SUDDENDEATH 6

#define HM_1TIC  1872 // (1/35) * 2^16
#define HM_2TICS 3745 // (2/35) * 2^16
#define HM_3TICS 5617 // (3/35) * 2^16
#define HM_4TICS 7489 // (4/35) * 2^16
#define HM_5TICS 9362 // (5/35) * 2^16

#define BUILDING_ALL            -1
#define BUILDING_BARRACKS        0
#define BUILDING_REFINERY        1
#define BUILDING_RESCENTRE       2
#define BUILDING_FACTORY         3
#define BUILDING_OBELISK         4
#define BUILDING_REPAIR          5
#define BUILDING_MINIREF         6
#define BUILDING_HEALTHREGEN     7
#define BUILDING_AMMOREGEN       8
#define BUILDING_PORTAL          9
#define BUILDING_PORTAL_2       10

#define NUM_BUILDINGS            9 // [Dusk] we don't count portals, do we?

// TODO: move these to 1000+ range
#define TID_BARRACKS_BLUE 101
#define TID_BARRACKS_RED 201
#define TID_REFINERY_BLUE 103
#define TID_REFINERY_RED 203
#define TID_RESCENTRE_BLUE 105
#define TID_RESCENTRE_RED 205
#define TID_FACTORY_BLUE 107
#define TID_FACTORY_RED 207
#define TID_REPAIR_BLUE 109
#define TID_REPAIR_RED 209
#define TID_TESLACOIL 114
#define TID_OBELISK 214
#define TID_CRATE 401
#define TID_TIBERIUM 402
#define TID_TICKETCOUNTER_BLUE 410
#define TID_TICKETCOUNTER_RED 411
#define TID_MINIREF_BLUE 901
#define TID_MINIREF_RED 900
#define TID_HEALTHREGEN_BLUE 903
#define TID_HEALTHREGEN_RED 902
#define TID_AMMOREGEN_BLUE 905
#define TID_AMMOREGEN_RED 904

// new tids
#define TID_PORTAL_BLUE1				1500
#define TID_PORTAL_BLUE2				1501
#define TID_PORTAL_RED1					1502
#define TID_PORTAL_RED2     		    1503
#define TID_PORTAL_TELEDEST 		    1504 // - 1507
#define TID_PORTAL_FX					1508 // - 1511
#define TID_MARINE						1520 // - 1544
#define TID_TESLACOIL_ORB				1600
#define TID_TESLACOIL_EYE				1700
#define TID_OBELISK_EYE					1701
#define TID_Player						2000 // - 2063
#define TID_SpawnMarker					2064 // - 2127

#define TARGETINFO_X			0  // X-coordinate
#define TARGETINFO_Y			1  // Y-coordinate
#define TARGETINFO_Z			2  // Z-coordinate
#define TARGETINFO_Health		3  // Health
#define TARGETINFO_Angle		4  // Angle
#define TARGETINFO_TID			5  // Thing ID
#define TARGETINFO_PlayerNum	9  // Player number
#define TARGETINFO_SpawnHealth	10 // Spawn health
#define TARGETINFO_Team			11 // Affiliated team
#define TARGETINFO_WeaponCheck	12 // for CheckTargetWeapon
#define TARGETINFO_Name			13 // Name (akin to print (n:0))

// TODO: populate this list
#define SC_SelfHealHealth         816
#define SC_CL_ObeliskTrail        822
#define SC_UpdateCreditDisplay    827
#define SC_MedicHealthRegen       835
#define SC_SpawnMarkerDestroyed   852
#define SC_CL_Changelog           853
#define SC_HUDTicker              854
#define SC_ChangePlayerTeam       891
#define SC_RazorWire              892
#define SC_TargetInfo             899
#define SC_JetpackToggle          907
#define SC_CL_SniperZoom          916
#define SC_CL_JetpackQuake        919
#define SC_PORTAL_TIDREQUEST      935
#define SC_PORTAL_INIT            936
#define SC_PORTAL_FUNCTION        937
#define SC_MARINE_INIT            938
#define SC_MARINE_COMPENSATION    939
#define SC_RestoreObelisk          944
#define SC_InventoryItemUse       951
#define SC_HealingRadius          952
#define SC_TimeGun                958
#define SC_CL_TimeGunHUD          959
#define SC_MARINE_STATS           967
#define SC_MARINE_DEATH           968

#define INVITEM_Beacon              0
#define INVITEM_RefillC4            1
#define INVITEM_MarineBeacon        2
#define INVITEM_SelfHeal            3
#define INVITEM_SpawnMarker			4

// How many points does researching stuff give you?
// Also used for miniref and utility-built ammo/health regens
#define POINTS_RESEARCH 12

// largest crate number, bump this every time new crates are added
#define MAX_CRATE 68

#define MAX_MARINES 24

bool Bots[MAX_MARINES];

int BaseTIDs[18] =
{	TID_BARRACKS_BLUE, TID_BARRACKS_RED,
	TID_REFINERY_BLUE, TID_REFINERY_RED,
	TID_RESCENTRE_BLUE, TID_RESCENTRE_RED,
	TID_FACTORY_BLUE, TID_FACTORY_RED,
	TID_TESLACOIL, TID_OBELISK,
	TID_REPAIR_BLUE, TID_REPAIR_RED,
	TID_MINIREF_BLUE, TID_MINIREF_RED,
	TID_HEALTHREGEN_BLUE, TID_HEALTHREGEN_RED,
	TID_AMMOREGEN_BLUE, TID_AMMOREGEN_RED
};

str BuildingNames[11] =
{	"Barracks",
	"Refinery",
	"Research Centre",
	"War Factory",
	"Obelisk of Light",
	"Repair Facility",
	"Mini-Refinery",
	"Health Regen.",
	"Ammo Regen.",
	"Teleporter #1",
	"Teleporter #2"
};

str TeamNames[2] =
{	"Blue",
	"Red"
};

int EventScripts;
int Credits[MAXPLAYERS];
int Experience[MAXPLAYERS];
int Rank[MAXPLAYERS];
str RankTitles[8] =
{	"Private",
	"Corporal",
	"Sergeant",
	"Master Sgt.",
	"Officer",
	"Lieutenant",
	"Major",
	"General",
};

int PlayersTeam[MAXPLAYERS];
bool IsAdmin[MAXPLAYERS];
bool Surrender[MAXPLAYERS];
int LastSurrenderTime[MAXPLAYERS];

// [Dusk]
int FirstBlood;

// [SP] Keep track of when player joins game for purposes of team balance
int StartTime[MAXPLAYERS];
int PlayerNeedsSwitched;

// [SP] Plasma cannon tracking
int LastPurchasedCannon[MAXPLAYERS];
int LastPurchasedBeacon[3];
int NumPlasmaCannons[3];

// [SP] Time Cop tracking
int LastPurchasedTimeCop[MAXPLAYERS];
int NumTimeCops[3];

int UsePortals = 1;
// [Dusk] This is used to determine which portal is alive *and* active
// a portal is considered inactive when it has no destinaton
int Portals[4] = {0};

// [Dusk] Used to determine when a player has teleported in the last 18
// tics, preventing teleporting multiple times.
// TODO: make a `powerup`
int HasTeleported[MAXPLAYERS];

int LastMenu[MAXPLAYERS] = {0}; // [SP] This is to fix double-pressing on mech switches, causing a huge cost to the buyer.

// [SP] Current Console Player IDX (client-side only)
// Defaults to -1, this will be the "server" - anytime ConsolePlayer is -1
// it means the client-side script did not execute, therefore this is the server.
int ConsolePlayer = -1;

//Bases
bool GotRefinery[2];
bool GotBarracks[2];
bool GotFactory[2];
bool GotPlant[2];
bool GotRepair[2];
bool GotObelisk[2];
int MiniRefinery[2];
int BaseLeft[2];

int LastAttackMessage;
int MaxTurretDistance = 2500;
int MinEnemyTurretDistance = 1500;

int SurrenderWaitTime = 20;

// [Dusk]
int RestoringObelisk[2];

//RESEARCHES!!!!!!!!
bool EnhancedRefining[2]; //Increases profits from harvesting by $50 //Costs $2000
bool AdvancedMechResearch[2]; //Enables purchase of Juggernaut, Titan and MadCat //Costs $2000
int GlobalMedic[2]; //Builds a Team Health Regeneration Cache //Costs $2250
int GlobalAmmo[2]; //Builds a Team Ammo Regeneration Cache //Costs $2250
bool AdvancedTurrets[2]; //Allows construction of high level Turrets //Costs $2000
bool MoreTurrets[2]; //Increases Turret cap by 10 //Costs $2000
int MaxTurrets[2] = {15, 15};

bool GettingMech[2];
bool SuddenDeath = False;
bool TicketPool = False;
int Tickets[2];
int StartingTickets;

bool RedBeaconCooldown = False;
bool BlueBeaconCooldown = False;
int RedBeaconTime = 300;
int BlueBeaconTime = 300;

int GameOver;

bool CrateTime = True;

int PlayerSpeeds[MAXPLAYERS]; // [Dusk] Keep track of speeds of individual players to work around a bug
int MechGetter[2]; // [Dusk] Who is in the hanger?

int PlasmaCooldown[MAXPLAYERS]; // [Dusk] Time until players can buy another plasma cannon

int MaxRazorWire = 20;
int MaxProxy = 50;
int MaxMechs = 5; // mini-ravens
int MaxCrates = 15;

int RepairBonus[MAXPLAYERS];
int MedicBonus[MAXPLAYERS];
int AIMarines[2] = {0}; // compensation-spawned only

int AIMarineCount = 0; // how many AI marines are there overall?

// [Dusk] for crate logic
int CrateNumber = 0;

// [Dusk] for spawn markers
int HasSpawnMarker[MAXPLAYERS];

// =============================================================================
int Classes[NUM_CLASSES][64];

// Keys to the Classes array
#define CK_NAME         0
#define CK_COST         1
#define CK_SPEED        2
#define CK_DEP          3
#define CK_C4           4
#define CK_GERNADES     5
#define CK_ARMORNUM     6
#define CK_ARMORMOD     7
#define CK_FLAGS        8
#define CK_NUMITEMS     9 // last key - item info follows

// CK_FLAGS
//						(1 << 0)
#define CF_SUPPORT		(1 << 1)
#define CF_CANTPILOT	(1 << 2)
#define CF_HEALTHREGEN	(1 << 3)
#define CF_HARVESTER	(1 << 4)

// CK_DEP
#define DEP_NONE        0
#define DEP_BARRACKS    1
#define DEP_CENTRE      2
#define DEP_REFINERY    3

// [Dusk] Armor stuff
#define NOCHANGE 255
#define ARMOD_NOCHANGE 0
#define ARMOD_FIRE 1
#define ARMOD_CHEM 2
#define ARMOD_LASER 3
#define ARMOD_EXPLO 4
#define ARMOD_BULLET 5
#define ARMOD_NONE 7
#define AGF_ADDITIVE 8
#define AGF_DONTSUBTRACT 16
#define AGF_DONTADD 32

// =============================================================================
str NormalWeaponNames[MAX_NORMAL_WEAPONS] =
{	"ArtilleryCannon",
	"ChemicalSprayer",
	"DoubleShotgun",
	"EagerBeaver",
	"Flamer",
	"GatlingGun",
	"GaussRifle",
	"GrenadeLauncher",
	"Knife",
	"LaserChaingun",
	"LaserRifle",
	"MachineGun",
	"MissileLauncher",
	"PlasmaCannon",
	"PlasmaGun",
	"Rifle",
	"ShockRifle",
	"Boomstick",
	"SniperRifle",
	"SubMachineGun",
	"TiberiumAutorifle",
	"TimeGun"
};

#include "a_functions.acs"
#include "a_armor.acs"
#include "a_monies.acs"
#include "a_xp.acs"
#include "a_defs.acs"

#include "a_admin.acs"
#include "a_basehud.acs"
#include "a_bases.acs"
#include "a_botmarines.acs"
#include "a_bots.acs"
#include "a_changelog.acs" // auto-generated
#include "a_client.acs"
#include "a_classes.acs"
#include "a_core.acs"
#include "a_crate.acs"
#include "a_death.acs"
#include "a_dmgovertime.acs"
#include "a_donate.acs"
#include "a_hud.acs"
#include "a_items.acs"
#include "a_jetpack.acs"
#include "a_mechs.acs"
#include "a_menu.acs"
#include "a_misc.acs"
#include "a_netscripts.acs"
#include "a_opendeck.acs"
#include "a_portal.acs"
#include "a_regen.acs"
#include "a_repfac.acs"
#include "a_repair.acs"
#include "a_research.acs"
#include "a_spawnroom.acs"
#include "a_stealth.acs"
#include "a_surrender.acs"
#include "a_suddendeath.acs"
#include "a_teambalance.acs"
#include "a_timegun.acs"
#include "a_tiberium.acs"
#include "a_util.acs"
#include "a_wchk.acs"
